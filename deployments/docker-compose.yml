services:
  mysql:
    image: mysql:8.0
    container_name: mysql_
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders
    ports: ["3306:3306"]
    command: ["--default-authentication-plugin=mysql_native_password"]
  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports: ["6379:6379"]
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672" # management UI
      - "15692:15692" # Prometheus /metrics
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9094:9094"
    restart: always
    environment:
      # KRaft
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listerners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      # Enable Topic Auto-Creation (if the producer send message to a non-existed topic)
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    # volumes:

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    restart: always
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    ports:
      - "8000:8000"
    depends_on:
      - kafka

  # --- LOGGING ---
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports: [ "9200:9200" ]
    healthcheck:
      test: [ "CMD-SHELL", "curl -sS http://localhost:9200 >/dev/null 2>&1 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 12

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.3
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports: [ "5601:5601" ]
    depends_on: [ elasticsearch ]

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.14.3
    container_name: filebeat
    user: root
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro  # config file
      - ../logs:/logs:ro
    depends_on: [ elasticsearch ]

  # --- METRICS ---
  prometheus:
    image: prom/prometheus:v2.55.0
    container_name: prometheus
    ports: [ "9090:9090" ]
    volumes:
      - ./ops/prometheus.yml:/etc/prometheus/prometheus.yml:ro

  grafana:
    image: grafana/grafana:10.4.6
    container_name: grafana
    ports: [ "3000:3000" ]
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on: [ prometheus ]
